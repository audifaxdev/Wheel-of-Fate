var _Mathfloor=Math.floor,_Mathsin=Math.sin,_Mathcos=Math.cos,_StringfromCharCode=String.fromCharCode,_Mathround=Math.round,_Mathlog=Math.log,_Mathsqrt=Math.sqrt,_Mathpow=Math.pow,_Mathmax=Math.max,_Mathmin=Math.min,_MathPI=Math.PI;webpackJsonp([0],[,function(a,t,o){"use strict";function n(M,E){if(this.renderer=M,void 0===E){var S=window.innerWidth||1,C=window.innerHeight||1,P={minFilter:T.LinearFilter,magFilter:T.LinearFilter,format:T.RGBFormat,stencilBuffer:!1};E=new T.WebGLRenderTarget(S,C,P)}this.renderTarget1=E,this.renderTarget2=E.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],this.copyPass=new f.ShaderPass(d.CopyShader)}Object.defineProperty(t,"__esModule",{value:!0}),t.ClearMaskPass=t.MaskPass=t.ShaderPass=t.RenderPass=t.CopyShader=void 0;var d=o(15);Object.defineProperty(t,"CopyShader",{enumerable:!0,get:function(){return d.CopyShader}});var u=o(17);Object.defineProperty(t,"RenderPass",{enumerable:!0,get:function(){return u.RenderPass}});var f=o(18);Object.defineProperty(t,"ShaderPass",{enumerable:!0,get:function(){return f.ShaderPass}});var g=o(16);Object.defineProperty(t,"MaskPass",{enumerable:!0,get:function(){return g.MaskPass}});var b=o(14);Object.defineProperty(t,"ClearMaskPass",{enumerable:!0,get:function(){return b.ClearMaskPass}});var T=o(0);n.prototype.swapBuffers=function(){var M=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=M},n.prototype.addPass=function(M){this.passes.push(M)},n.prototype.insertPass=function(M,E){this.passes.splice(E,0,M)},n.prototype.render=function(M){this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2;for(var C,E=!1,S=0;S<this.passes.length;S++)if(C=this.passes[S],C.enabled){if(C.render(this.renderer,this.writeBuffer,this.readBuffer,M,E),C.needsSwap){if(E){var P=this.renderer.context;P.stencilFunc(P.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,M),P.stencilFunc(P.EQUAL,1,4294967295)}this.swapBuffers()}C instanceof g.MaskPass?E=!0:C instanceof b.ClearMaskPass&&(E=!1)}},n.prototype.reset=function(M){M===void 0&&(M=this.renderTarget1.clone(),M.width=window.innerWidth,M.height=window.innerHeight),this.renderTarget1=M,this.renderTarget2=M.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},n.prototype.setSize=function(M,E){var S=this.renderTarget1.clone();S.width=M,S.height=E,this.reset(S)},n.camera=new T.OrthographicCamera(-1,1,1,-1,0,1),n.quad=new T.Mesh(new T.PlaneGeometry(2,2),null),n.scene=new T.Scene,n.scene.add(n.quad),t.default=n},,,,,,function(a){a.exports=function(o){function n(d,u){function f(){return 2*_MathPI/60/60*$.autoRotateSpeed}function g(){return _Mathpow(0.95,$.zoomSpeed)}function b(Ee){se.theta-=Ee}function T(Ee){se.phi-=Ee}function M(Ee){$.object instanceof o.PerspectiveCamera?le/=Ee:$.object instanceof o.OrthographicCamera?($.object.zoom=_Mathmax($.minZoom,_Mathmin($.maxZoom,$.object.zoom*Ee)),$.object.updateProjectionMatrix(),ue=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown defaultCamera type - dolly/zoom disabled."),$.enableZoom=!1)}function E(Ee){$.object instanceof o.PerspectiveCamera?le*=Ee:$.object instanceof o.OrthographicCamera?($.object.zoom=_Mathmax($.minZoom,_Mathmin($.maxZoom,$.object.zoom/Ee)),$.object.updateProjectionMatrix(),ue=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown defaultCamera type - dolly/zoom disabled."),$.enableZoom=!1)}function S(Ee){ce.set(Ee.clientX,Ee.clientY)}function C(Ee){ve.set(Ee.clientX,Ee.clientY)}function P(Ee){fe.set(Ee.clientX,Ee.clientY)}function R(Ee){me.set(Ee.clientX,Ee.clientY),pe.subVectors(me,ce);var Se=$.domElement===document?$.domElement.body:$.domElement;b(2*_MathPI*pe.x/Se.clientWidth*$.rotateSpeed),T(2*_MathPI*pe.y/Se.clientHeight*$.rotateSpeed),ce.copy(me),$.update()}function L(Ee){be.set(Ee.clientX,Ee.clientY),ye.subVectors(be,ve),0<ye.y?M(g()):0>ye.y&&E(g()),ve.copy(be),$.update()}function F(Ee){ge.set(Ee.clientX,Ee.clientY),he.subVectors(ge,fe),Me(he.x,he.y),fe.copy(ge),$.update()}function B(){}function D(Ee){0>Ee.deltaY?E(g()):0<Ee.deltaY&&M(g()),$.update()}function U(Ee){switch(Ee.keyCode){case $.keys.UP:Me(0,$.keyPanSpeed),$.update();break;case $.keys.BOTTOM:Me(0,-$.keyPanSpeed),$.update();break;case $.keys.LEFT:Me($.keyPanSpeed,0),$.update();break;case $.keys.RIGHT:Me(-$.keyPanSpeed,0),$.update();}}function V(Ee){ce.set(Ee.touches[0].pageX,Ee.touches[0].pageY)}function O(Ee){var Se=Ee.touches[0].pageX-Ee.touches[1].pageX,Ce=Ee.touches[0].pageY-Ee.touches[1].pageY,Pe=_Mathsqrt(Se*Se+Ce*Ce);ve.set(0,Pe)}function A(Ee){fe.set(Ee.touches[0].pageX,Ee.touches[0].pageY)}function I(Ee){me.set(Ee.touches[0].pageX,Ee.touches[0].pageY),pe.subVectors(me,ce);var Se=$.domElement===document?$.domElement.body:$.domElement;b(2*_MathPI*pe.x/Se.clientWidth*$.rotateSpeed),T(2*_MathPI*pe.y/Se.clientHeight*$.rotateSpeed),ce.copy(me),$.update()}function W(Ee){var Se=Ee.touches[0].pageX-Ee.touches[1].pageX,Ce=Ee.touches[0].pageY-Ee.touches[1].pageY,Pe=_Mathsqrt(Se*Se+Ce*Ce);be.set(0,Pe),ye.subVectors(be,ve),0<ye.y?E(g()):0>ye.y&&M(g()),ve.copy(be),$.update()}function N(Ee){ge.set(Ee.touches[0].pageX,Ee.touches[0].pageY),he.subVectors(ge,fe),Me(he.x,he.y),fe.copy(ge),$.update()}function H(){}function _(Ee){if(!1!==$.enabled){if(Ee.preventDefault(),Ee.button===$.mouseButtons.ORBIT){if(!1===$.enableRotate)return;S(Ee),oe=te.ROTATE}else if(Ee.button===$.mouseButtons.ZOOM){if(!1===$.enableZoom)return;C(Ee),oe=te.DOLLY}else if(Ee.button===$.mouseButtons.PAN){if(!1===$.enablePan)return;P(Ee),oe=te.PAN}oe!==te.NONE&&(document.addEventListener("mousemove",G,!1),document.addEventListener("mouseup",q,!1),$.dispatchEvent(ae))}}function G(Ee){if(!1!==$.enabled)if(Ee.preventDefault(),oe===te.ROTATE){if(!1===$.enableRotate)return;R(Ee)}else if(oe===te.DOLLY){if(!1===$.enableZoom)return;L(Ee)}else if(oe===te.PAN){if(!1===$.enablePan)return;F(Ee)}}function q(Ee){!1===$.enabled||(B(Ee),document.removeEventListener("mousemove",G,!1),document.removeEventListener("mouseup",q,!1),$.dispatchEvent(re),oe=te.NONE)}function Z(Ee){!1===$.enabled||!1===$.enableZoom||oe!==te.NONE&&oe!==te.ROTATE||(Ee.preventDefault(),Ee.stopPropagation(),D(Ee),$.dispatchEvent(ae),$.dispatchEvent(re))}function Y(Ee){!1===$.enabled||!1===$.enableKeys||!1===$.enablePan||U(Ee)}function X(Ee){if(!1!==$.enabled){switch(Ee.touches.length){case 1:if(!1===$.enableRotate)return;V(Ee),oe=te.TOUCH_ROTATE;break;case 2:if(!1===$.enableZoom)return;O(Ee),oe=te.TOUCH_DOLLY;break;case 3:if(!1===$.enablePan)return;A(Ee),oe=te.TOUCH_PAN;break;default:oe=te.NONE;}oe!==te.NONE&&$.dispatchEvent(ae)}}function K(Ee){if(!1!==$.enabled)switch(Ee.preventDefault(),Ee.stopPropagation(),Ee.touches.length){case 1:if(!1===$.enableRotate)return;if(oe!==te.TOUCH_ROTATE)return;I(Ee);break;case 2:if(!1===$.enableZoom)return;if(oe!==te.TOUCH_DOLLY)return;W(Ee);break;case 3:if(!1===$.enablePan)return;if(oe!==te.TOUCH_PAN)return;N(Ee);break;default:oe=te.NONE;}}function Q(Ee){!1===$.enabled||(H(Ee),$.dispatchEvent(re),oe=te.NONE)}function J(Ee){Ee.preventDefault()}this.object=d,this.domElement=void 0===u?document:u,this.enabled=!0,this.target=new o.Vector3,this.minDistance=0,this.maxDistance=Infinity,this.minZoom=0,this.maxZoom=Infinity,this.minPolarAngle=0,this.maxPolarAngle=_MathPI,this.minAzimuthAngle=-Infinity,this.maxAzimuthAngle=Infinity,this.enableDamping=!1,this.dampingFactor=0.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:o.MOUSE.LEFT,ZOOM:o.MOUSE.MIDDLE,PAN:o.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return ie.phi},this.getAzimuthalAngle=function(){return ie.theta},this.reset=function(){$.target.copy($.target0),$.object.position.copy($.position0),$.object.zoom=$.zoom0,$.object.updateProjectionMatrix(),$.dispatchEvent(ee),$.update(),oe=te.NONE},this.update=function(){var Ee=new o.Vector3,Se=new o.Quaternion().setFromUnitVectors(d.up,new o.Vector3(0,1,0)),Ce=Se.clone().inverse(),Pe=new o.Vector3,Re=new o.Quaternion;return function(){var Fe=$.object.position;return Ee.copy(Fe).sub($.target),Ee.applyQuaternion(Se),ie.setFromVector3(Ee),$.autoRotate&&oe===te.NONE&&b(f()),ie.theta+=se.theta,ie.phi+=se.phi,ie.theta=_Mathmax($.minAzimuthAngle,_Mathmin($.maxAzimuthAngle,ie.theta)),ie.phi=_Mathmax($.minPolarAngle,_Mathmin($.maxPolarAngle,ie.phi)),ie.makeSafe(),ie.radius*=le,ie.radius=_Mathmax($.minDistance,_Mathmin($.maxDistance,ie.radius)),$.target.add(de),Ee.setFromSpherical(ie),Ee.applyQuaternion(Ce),Fe.copy($.target).add(Ee),$.object.lookAt($.target),!0===$.enableDamping?(se.theta*=1-$.dampingFactor,se.phi*=1-$.dampingFactor):se.set(0,0,0),le=1,de.set(0,0,0),(ue||Pe.distanceToSquared($.object.position)>ne||8*(1-Re.dot($.object.quaternion))>ne)&&($.dispatchEvent(ee),Pe.copy($.object.position),Re.copy($.object.quaternion),ue=!1,!0)}}(),this.dispose=function(){$.domElement.removeEventListener("contextmenu",J,!1),$.domElement.removeEventListener("mousedown",_,!1),$.domElement.removeEventListener("wheel",Z,!1),$.domElement.removeEventListener("touchstart",X,!1),$.domElement.removeEventListener("touchend",Q,!1),$.domElement.removeEventListener("touchmove",K,!1),document.removeEventListener("mousemove",G,!1),document.removeEventListener("mouseup",q,!1),window.removeEventListener("keydown",Y,!1)};var $=this,ee={type:"change"},ae={type:"start"},re={type:"end"},te={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},oe=te.NONE,ne=1e-6,ie=new o.Spherical,se=new o.Spherical,le=1,de=new o.Vector3,ue=!1,ce=new o.Vector2,me=new o.Vector2,pe=new o.Vector2,fe=new o.Vector2,ge=new o.Vector2,he=new o.Vector2,ve=new o.Vector2,be=new o.Vector2,ye=new o.Vector2,xe=function(){var Ee=new o.Vector3;return function(Ce,Pe){Ee.setFromMatrixColumn(Pe,0),Ee.multiplyScalar(-Ce),de.add(Ee)}}(),Te=function(){var Ee=new o.Vector3;return function(Ce,Pe){Ee.setFromMatrixColumn(Pe,1),Ee.multiplyScalar(Ce),de.add(Ee)}}(),Me=function(){var Ee=new o.Vector3;return function(Ce,Pe){var Re=$.domElement===document?$.domElement.body:$.domElement;if($.object instanceof o.PerspectiveCamera){var Le=$.object.position;Ee.copy(Le).sub($.target);var Fe=Ee.length();Fe*=Math.tan($.object.fov/2*_MathPI/180),xe(2*Ce*Fe/Re.clientHeight,$.object.matrix),Te(2*Pe*Fe/Re.clientHeight,$.object.matrix)}else $.object instanceof o.OrthographicCamera?(xe(Ce*($.object.right-$.object.left)/$.object.zoom/Re.clientWidth,$.object.matrix),Te(Pe*($.object.top-$.object.bottom)/$.object.zoom/Re.clientHeight,$.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown defaultCamera type - pan disabled."),$.enablePan=!1)}}();$.domElement.addEventListener("contextmenu",J,!1),$.domElement.addEventListener("mousedown",_,!1),$.domElement.addEventListener("wheel",Z,!1),$.domElement.addEventListener("touchstart",X,!1),$.domElement.addEventListener("touchend",Q,!1),$.domElement.addEventListener("touchmove",K,!1),window.addEventListener("keydown",Y,!1),this.update()}return n.prototype=Object.create(o.EventDispatcher.prototype),n.prototype.constructor=n,Object.defineProperties(n.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(d){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!d}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(d){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!d}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(d){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!d}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(d){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!d}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(d){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!d}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(d){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=d}}}),n}},function(a,t,o){"use strict";var n=o(0),d=o(21);t.a=class{constructor(f=void 0){this.manager=n.DefaultLoadingManager,this.hdrLoader=new d.a}load(f,g,b,T=void 0,M=void 0){let E=function(F,B,D,U){let V=F[B+3],O=_Mathpow(2,V-128)/255;D[U+0]=F[B+0]*O,D[U+1]=F[B+1]*O,D[U+2]=F[B+2]*O},S=function(){function F(U){B[0]=U;let V=D[0],O=32768&V>>16,A=2047&V>>12,I=255&V>>23;return 103>I?O:142<I?(O|=31744,O|=(255==I?0:1)&&8388607&V,O):113>I?(A|=2048,O|=(A>>114-I)+(1&A>>113-I),O):(O|=I-112<<10|A>>1,O+=1&A,O)}let B=new Float32Array(1),D=new Int32Array(B.buffer);return function(U,V,O,A){let I=U[V+3],W=_Mathpow(2,I-128)/255;O[A+0]=F(U[V+0]*W),O[A+1]=F(U[V+1]*W),O[A+2]=F(U[V+2]*W)}}(),C=new n.CubeTexture;C.type=f,C.encoding=f===n.UnsignedByteType?n.RGBEEncoding:n.LinearEncoding,C.format=f===n.UnsignedByteType?n.RGBAFormat:n.RGBFormat,C.minFilter=C.encoding===n.RGBEEncoding?n.NearestFilter:n.LinearFilter,C.magFilter=C.encoding===n.RGBEEncoding?n.NearestFilter:n.LinearFilter,C.generateMipmaps=C.encoding!==n.RGBEEncoding,C.anisotropy=0;let P=this.hdrLoader,R=0,L=(F,B,D,U)=>{let V=new n.FileLoader(this.manager);V.setResponseType("arraybuffer"),V.load(g[F],(O)=>{R++;let A=this.hdrLoader._parser(O);if(A){if(f===n.FloatType){let I=3*(A.data.length/4),W=new Float32Array(I);for(let N=0;N<I;N++)E(A.data,4*N,W,3*N);A.data=W}else if(f===n.HalfFloatType){let I=3*(A.data.length/4),W=new Uint16Array(I);for(let N=0;N<I;N++)S(A.data,4*N,W,3*N);A.data=W}if(void 0!==A.image)C[F].images=A.image;else if(void 0!==A.data){let I=new n.DataTexture(A.data,A.width,A.height);I.format=C.format,I.type=C.type,I.encoding=C.encoding,I.minFilter=C.minFilter,I.magFilter=C.magFilter,I.generateMipmaps=C.generateMipmaps,C.images[F]=I}6==R&&(C.needsUpdate=!0,B&&B(C))}},D,U)};for(let F=0;F<g.length;F++)L(F,b,T,M);return C}}},function(a,t,o){"use strict";var n=o(0);t.a=class{constructor(u,f=void 0){this.cubeLods=u,this.numLods=f;let g=4*u[0].width,b=u[0].texture,T={format:b.format,magFilter:b.magFilter,minFilter:b.minFilter,type:b.type,generateMipmaps:b.generateMipmaps,anisotropy:b.anisotropy,encoding:b.encoding};b.encoding===n.RGBM16Encoding&&(T.magFilter=n.LinearFilter,T.minFilter=n.LinearFilter),this.CubeUVRenderTarget=new n.WebGLRenderTarget(g,g,T),this.CubeUVRenderTarget.texture.name="PMREMCubeUVPacker.cubeUv",this.CubeUVRenderTarget.texture.mapping=n.CubeUVReflectionMapping,this.camera=new n.OrthographicCamera(0.5*-g,0.5*g,0.5*-g,0.5*g,0,1e3),this.scene=new n.Scene,this.scene.add(this.camera),this.objects=[];let E=[];E.push(new n.Vector2(0,0)),E.push(new n.Vector2(1,0)),E.push(new n.Vector2(2,0)),E.push(new n.Vector2(0,1)),E.push(new n.Vector2(1,1)),E.push(new n.Vector2(2,1));let C=g;g=u[0].width;let P=0,R=4;this.numLods=_Mathlog(u[0].width)/0.6931471805599453-2;for(let F,L=0;L<this.numLods;L++){F=0.5*(C-C/R),16<g&&(R*=2);let B=16<g?6:1,D=0,U=0,V=g;for(let O=0;O<B;O++){for(let I,A=0;6>A;A++){I=this.getShader(),I.uniforms.envMap.value=this.cubeLods[L].texture,I.envMap=this.cubeLods[L].texture,I.uniforms.faceIndex.value=A,I.uniforms.mapSize.value=V;let W=I.uniforms.testColor.value,N=new n.Mesh(new n.PlaneGeometry(V,V,0),I);N.position.x=E[A].x*V-F+D,N.position.y=E[A].y*V-F+P+U,N.material.side=n.DoubleSide,this.scene.add(N),this.objects.push(N)}U+=1.75*V,D+=1.25*V,V/=2}P+=2*g,16<g&&(g/=2)}}update(u){let f=u.gammaInput,g=u.gammaOutput,b=u.toneMapping,T=u.toneMappingExposure;u.gammaInput=!1,u.gammaOutput=!1,u.toneMapping=n.LinearToneMapping,u.toneMappingExposure=1,u.render(this.scene,this.camera,this.CubeUVRenderTarget,!1),u.toneMapping=b,u.toneMappingExposure=T,u.gammaInput=f,u.gammaOutput=g}getShader(){let u=new n.ShaderMaterial({uniforms:{faceIndex:{value:0},mapSize:{value:0},envMap:{value:null},testColor:{value:new n.Vector3(1,1,1)}},vertexShader:"precision highp float;        varying vec2 vUv;        void main() {          vUv = uv;          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );        }",fragmentShader:"precision highp float;        varying vec2 vUv;        uniform samplerCube envMap;        uniform float mapSize;        uniform vec3 testColor;        uniform int faceIndex;                void main() {          vec3 sampleDirection;          vec2 uv = vUv;          uv = uv * 2.0 - 1.0;          uv.y *= -1.0;          if(faceIndex == 0) {            sampleDirection = normalize(vec3(1.0, uv.y, -uv.x));          } else if(faceIndex == 1) {            sampleDirection = normalize(vec3(uv.x, 1.0, uv.y));          } else if(faceIndex == 2) {            sampleDirection = normalize(vec3(uv.x, uv.y, 1.0));          } else if(faceIndex == 3) {            sampleDirection = normalize(vec3(-1.0, uv.y, uv.x));          } else if(faceIndex == 4) {            sampleDirection = normalize(vec3(uv.x, -1.0, -uv.y));          } else {            sampleDirection = normalize(vec3(-uv.x, uv.y, -1.0));          }          vec4 color = envMapTexelToLinear( textureCube( envMap, sampleDirection ) );          gl_FragColor = linearToOutputTexel( color );        }",blending:n.CustomBlending,premultipliedAlpha:!1,blendSrc:n.OneFactor,blendDst:n.ZeroFactor,blendSrcAlpha:n.OneFactor,blendDstAlpha:n.ZeroFactor,blendEquation:n.AddEquation});return u}}},function(a,t,o){"use strict";var n=o(0);t.a=class{constructor(u,f=void 0,g=void 0){this.sourceTexture=u,this.resolution=g===void 0?256:g,this.samplesPerLevel=f===void 0?16:f;let b=u.encoding===n.LinearEncoding||u.encoding===n.GammaEncoding||u.encoding===n.sRGBEncoding;this.sourceTexture.minFilter=b?n.LinearFilter:n.NearestFilter,this.sourceTexture.magFilter=b?n.LinearFilter:n.NearestFilter,this.sourceTexture.generateMipmaps=this.sourceTexture.generateMipmaps&&b,this.cubeLods=[];let T=this.resolution,M={format:this.sourceTexture.format,magFilter:this.sourceTexture.magFilter,minFilter:this.sourceTexture.minFilter,type:this.sourceTexture.type,generateMipmaps:this.sourceTexture.generateMipmaps,anisotropy:this.sourceTexture.anisotropy,encoding:this.sourceTexture.encoding};this.numLods=_Mathlog(T)/0.6931471805599453-2;for(let S,E=0;E<this.numLods;E++)S=new n.WebGLRenderTargetCube(T,T,M),S.texture.name="PMREMGenerator.cube"+E,this.cubeLods.push(S),T=_Mathmax(16,T/2);this.camera=new n.OrthographicCamera(-1,1,1,-1,0,1e3),this.shader=this.getShader(),this.shader.defines.SAMPLES_PER_LEVEL=this.samplesPerLevel,this.planeMesh=new n.Mesh(new n.PlaneGeometry(2,2,0),this.shader),this.planeMesh.material.side=n.DoubleSide,this.scene=new n.Scene,this.scene.add(this.planeMesh),this.scene.add(this.camera),this.shader.uniforms.envMap.value=this.sourceTexture,this.shader.envMap=this.sourceTexture}update(u){this.shader.uniforms.envMap.value=this.sourceTexture,this.shader.envMap=this.sourceTexture;let f=u.gammaInput,g=u.gammaOutput,b=u.toneMapping,T=u.toneMappingExposure;u.toneMapping=n.LinearToneMapping,u.toneMappingExposure=1,u.gammaInput=!1,u.gammaOutput=!1;for(let E,M=0;M<this.numLods;M++){E=M/(this.numLods-1),this.shader.uniforms.roughness.value=0.9*E,this.shader.uniforms.queryScale.value.x=0==M?-1:1;let S=this.cubeLods[M].width;this.shader.uniforms.mapSize.value=S,this.renderToCubeMapTarget(u,this.cubeLods[M]),5>M&&(this.shader.uniforms.envMap.value=this.cubeLods[M].texture)}u.toneMapping=b,u.toneMappingExposure=T,u.gammaInput=f,u.gammaOutput=g}renderToCubeMapTargetFace(u,f,g){f.activeCubeFace=g,this.shader.uniforms.faceIndex.value=g,u.render(this.scene,this.camera,f,!0)}renderToCubeMapTarget(u,f){for(let g=0;6>g;g++)this.renderToCubeMapTargetFace(u,f,g)}getShader(){return new n.ShaderMaterial({defines:{SAMPLES_PER_LEVEL:20},uniforms:{faceIndex:{value:0},roughness:{value:0.5},mapSize:{value:0.5},envMap:{value:null},queryScale:{value:new n.Vector3(1,1,1)},testColor:{value:new n.Vector3(1,1,1)}},vertexShader:"varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }",fragmentShader:"#include <common>\n        varying vec2 vUv;\n        uniform int faceIndex;\n        uniform float roughness;\n        uniform samplerCube envMap;\n        uniform float mapSize;\n        uniform vec3 testColor;\n        uniform vec3 queryScale;\n        \n        float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n          float a = ggxRoughness + 0.0001;\n          a *= a;\n          return ( 2.0 / a - 2.0 );\n        }\n        vec3 ImportanceSamplePhong(vec2 uv, mat3 vecSpace, float specPow) {\n          float phi = uv.y * 2.0 * PI;\n          float cosTheta = pow(1.0 - uv.x, 1.0 / (specPow + 1.0));\n          float sinTheta = sqrt(1.0 - cosTheta * cosTheta);\n          vec3 sampleDir = vec3(cos(phi) * sinTheta, sin(phi) * sinTheta, cosTheta);\n          return vecSpace * sampleDir;\n        }\n        vec3 ImportanceSampleGGX( vec2 uv, mat3 vecSpace, float Roughness )\n        {\n          float a = Roughness * Roughness;\n          float Phi = 2.0 * PI * uv.x;\n          float CosTheta = sqrt( (1.0 - uv.y) / ( 1.0 + (a*a - 1.0) * uv.y ) );\n          float SinTheta = sqrt( 1.0 - CosTheta * CosTheta );\n          return vecSpace * vec3(SinTheta * cos( Phi ), SinTheta * sin( Phi ), CosTheta);\n        }\n        mat3 matrixFromVector(vec3 n) {\n          float a = 1.0 / (1.0 + n.z);\n          float b = -n.x * n.y * a;\n          vec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\n          vec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\n          return mat3(b1, b2, n);\n        }\n        \n        vec4 testColorMap(float Roughness) {\n          vec4 color;\n          if(faceIndex == 0)\n            color = vec4(1.0,0.0,0.0,1.0);\n          else if(faceIndex == 1)\n            color = vec4(0.0,1.0,0.0,1.0);\n          else if(faceIndex == 2)\n            color = vec4(0.0,0.0,1.0,1.0);\n          else if(faceIndex == 3)\n            color = vec4(1.0,1.0,0.0,1.0);\n          else if(faceIndex == 4)\n            color = vec4(0.0,1.0,1.0,1.0);\n          else\n            color = vec4(1.0,0.0,1.0,1.0);\n          color *= ( 1.0 - Roughness );\n          return color;\n        }\n        void main() {\n          vec3 sampleDirection;\n          vec2 uv = vUv*2.0 - 1.0;\n          float offset = -1.0/mapSize;\n          const float a = -1.0;\n          const float b = 1.0;\n          float c = -1.0 + offset;\n          float d = 1.0 - offset;\n          float bminusa = b - a;\n          uv.x = (uv.x - a)/bminusa * d - (uv.x - b)/bminusa * c;\n          uv.y = (uv.y - a)/bminusa * d - (uv.y - b)/bminusa * c;\n          if (faceIndex==0) {\n            sampleDirection = vec3(1.0, -uv.y, -uv.x);\n          } else if (faceIndex==1) {\n            sampleDirection = vec3(-1.0, -uv.y, uv.x);\n          } else if (faceIndex==2) {\n            sampleDirection = vec3(uv.x, 1.0, uv.y);\n          } else if (faceIndex==3) {\n            sampleDirection = vec3(uv.x, -1.0, -uv.y);\n          } else if (faceIndex==4) {\n            sampleDirection = vec3(uv.x, -uv.y, 1.0);\n          } else {\n            sampleDirection = vec3(-uv.x, -uv.y, -1.0);\n          }\n          mat3 vecSpace = matrixFromVector(normalize(sampleDirection * queryScale));\n          vec3 rgbColor = vec3(0.0);\n          const int NumSamples = SAMPLES_PER_LEVEL;\n          vec3 vect;\n          float weight = 0.0;\n          for( int i = 0; i < NumSamples; i ++ ) {\n            float sini = sin(float(i));\n            float cosi = cos(float(i));\n            float r = rand(vec2(sini, cosi));\n            vect = ImportanceSampleGGX(vec2(float(i) / float(NumSamples), r), vecSpace, roughness);\n            float dotProd = dot(vect, normalize(sampleDirection));\n            weight += dotProd;\n            vec3 color = envMapTexelToLinear(textureCube(envMap,vect)).rgb;\n            rgbColor.rgb += color;\n          }\n          rgbColor /= float(NumSamples);\n          //rgbColor = testColorMap( roughness ).rgb;\n          gl_FragColor = linearToOutputTexel( vec4( rgbColor, 1.0 ) );\n        }",blending:n.CustomBlending,blendSrc:n.OneFactor,blendDst:n.ZeroFactor,blendSrcAlpha:n.OneFactor,blendDstAlpha:n.ZeroFactor,blendEquation:n.AddEquation})}}},function(a,t,o){"use strict";var n=o(0),d=o(20),u=o(19),f=o(1),g=o.n(f);class b extends d.a{constructor(T,M,E,S){super(),this.BlurDirectionX=new n.Vector2(1,0),this.BlurDirectionY=new n.Vector2(0,1),this.strength=M===void 0?1:M,this.radius=E,this.threshold=S,this.resolution=T===void 0?new n.Vector2(256,256):new n.Vector2(T.x,T.y);let C={minFilter:n.LinearFilter,magFilter:n.LinearFilter,format:n.RGBAFormat};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var P=_Mathround(this.resolution.x/2),R=_Mathround(this.resolution.y/2);this.renderTargetBright=new n.WebGLRenderTarget(P,R,C),this.renderTargetBright.texture.generateMipmaps=!1;for(let V=0;V<this.nMips;V++){var L=new n.WebGLRenderTarget(P,R,C);L.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(L);var L=new n.WebGLRenderTarget(P,R,C);L.texture.generateMipmaps=!1,this.renderTargetsVertical.push(L),P=_Mathround(P/2),R=_Mathround(R/2)}let F=u.a;this.highPassUniforms=n.UniformsUtils.clone(F.uniforms),this.highPassUniforms.luminosityThreshold.value=S,this.highPassUniforms.smoothWidth.value=0.01,this.materialHighPassFilter=new n.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:F.vertexShader,fragmentShader:F.fragmentShader,defines:{}}),this.separableBlurMaterials=[];let B=[3,5,7,9,11];var P=_Mathround(this.resolution.x/2),R=_Mathround(this.resolution.y/2);for(let V=0;V<this.nMips;V++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(B[V])),this.separableBlurMaterials[V].uniforms.texSize.value=new n.Vector2(P,R),P=_Mathround(P/2),R=_Mathround(R/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=M,this.compositeMaterial.uniforms.bloomRadius.value=0.1,this.compositeMaterial.needsUpdate=!0;this.compositeMaterial.uniforms.bloomFactors.value=[1,0.8,0.6,0.4,0.2],this.bloomTintColors=[new n.Vector3(1,1,1),new n.Vector3(1,1,1),new n.Vector3(1,1,1),new n.Vector3(1,1,1),new n.Vector3(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors;let U=f.CopyShader;this.copyUniforms=n.UniformsUtils.clone(U.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new n.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:U.vertexShader,fragmentShader:U.fragmentShader,blending:n.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new n.Color,this.oldClearAlpha=1,this.camera=new n.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new n.Scene,this.quad=new n.Mesh(new n.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad)}dispose(){for(let T=0;T<this.renderTargetsHorizontal.length();T++)this.renderTargetsHorizontal[T].dispose();for(let T=0;T<this.renderTargetsVertical.length();T++)this.renderTargetsVertical[T].dispose();this.renderTargetBright.dispose()}setSize(T,M){let E=_Mathround(T/2),S=_Mathround(M/2);this.renderTargetBright.setSize(E,S);for(let C=0;C<this.nMips;C++)this.renderTargetsHorizontal[C].setSize(E,S),this.renderTargetsVertical[C].setSize(E,S),this.separableBlurMaterials[C].uniforms.texSize.value=new n.Vector2(E,S),E=_Mathround(E/2),S=_Mathround(S/2)}render(T,M,E,S,C){this.oldClearColor.copy(T.getClearColor()),this.oldClearAlpha=T.getClearAlpha();let P=T.autoClear;T.autoClear=!1,T.setClearColor(new n.Color(0,0,0),0),C&&T.context.disable(T.context.STENCIL_TEST),this.highPassUniforms.tDiffuse.value=E.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.quad.material=this.materialHighPassFilter,T.render(this.scene,this.camera,this.renderTargetBright,!0);let R=this.renderTargetBright;for(let L=0;L<this.nMips;L++)this.quad.material=this.separableBlurMaterials[L],this.separableBlurMaterials[L].uniforms.colorTexture.value=R.texture,this.separableBlurMaterials[L].uniforms.direction.value=this.BlurDirectionX,T.render(this.scene,this.camera,this.renderTargetsHorizontal[L],!0),this.separableBlurMaterials[L].uniforms.colorTexture.value=this.renderTargetsHorizontal[L].texture,this.separableBlurMaterials[L].uniforms.direction.value=this.BlurDirectionY,T.render(this.scene,this.camera,this.renderTargetsVertical[L],!0),R=this.renderTargetsVertical[L];this.quad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,T.render(this.scene,this.camera,this.renderTargetsHorizontal[0],!0),this.quad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,C&&T.context.enable(T.context.STENCIL_TEST),T.render(this.scene,this.camera,E,!1),T.setClearColor(this.oldClearColor,this.oldClearAlpha),T.autoClear=P}getSeperableBlurMaterial(T){return new n.ShaderMaterial({defines:{KERNEL_RADIUS:T,SIGMA:T},uniforms:{colorTexture:{value:null},texSize:{value:new n.Vector2(0.5,0.5)},direction:{value:new n.Vector2(0.5,0.5)}},vertexShader:"varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }",fragmentShader:"#include <common>        varying vec2 vUv;\n        uniform sampler2D colorTexture;\n        uniform vec2 texSize;        uniform vec2 direction;                float gaussianPdf(in float x, in float sigma) {          return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;        }        void main() {\n          vec2 invSize = 1.0 / texSize;          float fSigma = float(SIGMA);          float weightSum = gaussianPdf(0.0, fSigma);          vec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;          for( int i = 1; i < KERNEL_RADIUS; i ++ ) {            float x = float(i);            float w = gaussianPdf(x, fSigma);            vec2 uvOffset = direction * invSize * x;            vec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;            vec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;            diffuseSum += (sample1 + sample2) * w;            weightSum += 2.0 * w;          }          gl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n        }"})}getCompositeMaterial(T){return new n.ShaderMaterial({defines:{NUM_MIPS:T},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }",fragmentShader:"varying vec2 vUv;        uniform sampler2D blurTexture1;        uniform sampler2D blurTexture2;        uniform sampler2D blurTexture3;        uniform sampler2D blurTexture4;        uniform sampler2D blurTexture5;        uniform sampler2D dirtTexture;        uniform float bloomStrength;        uniform float bloomRadius;        uniform float bloomFactors[NUM_MIPS];        uniform vec3 bloomTintColors[NUM_MIPS];                float lerpBloomFactor(const in float factor) {           float mirrorFactor = 1.2 - factor;          return mix(factor, mirrorFactor, bloomRadius);        }                void main() {          gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +                           lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +                          lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +                          lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +                          lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );        }"})}}t.a=b},,,function(a,t){"use strict";function n(d,u){return this instanceof n?void(this.enabled=!0):new n(d,u)}Object.defineProperty(t,"__esModule",{value:!0}),n.prototype.render=function(d){var b=d.context;b.disable(b.STENCIL_TEST)},t.ClearMaskPass=n},function(a,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")};t.CopyShader=n},function(a,t){"use strict";function n(d,u){return this instanceof n?void(this.scene=d,this.camera=u,this.enabled=!0,this.clear=!0,this.needsSwap=!1,this.inverse=!1):new n(d,u)}Object.defineProperty(t,"__esModule",{value:!0}),n.prototype.render=function(d,u,f){var b=d.context;b.colorMask(!1,!1,!1,!1),b.depthMask(!1);var T,M;this.inverse?(T=0,M=1):(T=1,M=0),b.enable(b.STENCIL_TEST),b.stencilOp(b.REPLACE,b.REPLACE,b.REPLACE),b.stencilFunc(b.ALWAYS,T,4294967295),b.clearStencil(M),d.render(this.scene,this.camera,f,this.clear),d.render(this.scene,this.camera,u,this.clear),b.colorMask(!0,!0,!0,!0),b.depthMask(!0),b.stencilFunc(b.EQUAL,1,4294967295),b.stencilOp(b.KEEP,b.KEEP,b.KEEP)},t.MaskPass=n},function(a,t,o){"use strict";function n(u,f,g,b,T){return this instanceof n?void(this.scene=u,this.camera=f,this.overrideMaterial=g,this.clearColor=b,this.clearAlpha=T===void 0?1:T,this.oldClearColor=new d.Color,this.oldClearAlpha=1,this.enabled=!0,this.clear=!0,this.needsSwap=!1):new n(u,f,g,b,T)}Object.defineProperty(t,"__esModule",{value:!0}),t.RenderPass=void 0;var d=o(0);n.prototype.render=function(u,f,g){this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(this.oldClearColor.copy(u.getClearColor()),this.oldClearAlpha=u.getClearAlpha(),u.setClearColor(this.clearColor,this.clearAlpha)),u.render(this.scene,this.camera,g,this.clear),this.clearColor&&u.setClearColor(this.oldClearColor,this.oldClearAlpha),this.scene.overrideMaterial=null},t.RenderPass=n},function(a,t,o){"use strict";function d(b,T){return this instanceof d?void(this.textureID=T===void 0?"tDiffuse":T,this.uniforms=g.UniformsUtils.clone(b.uniforms),this.material=new g.ShaderMaterial({uniforms:this.uniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader}),this.renderToScreen=!1,this.enabled=!0,this.needsSwap=!0,this.clear=!1):new d(b,T)}Object.defineProperty(t,"__esModule",{value:!0}),t.ShaderPass=void 0;var u=o(1),f=function(b){return b&&b.__esModule?b:{default:b}}(u),g=o(0);d.prototype.render=function(b,T,M){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=M.texture),f.default.quad.material=this.material,this.renderToScreen?b.render(f.default.scene,f.default.camera):b.render(f.default.scene,f.default.camera,T,this.clear)},t.ShaderPass=d},function(a,t,o){"use strict";var n=o(0);t.a={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{type:"t",value:null},luminosityThreshold:{type:"f",value:1},smoothWidth:{type:"f",value:1},defaultColor:{type:"c",value:new n.Color(0)},defaultOpacity:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","gl_FragColor = mix( outputColor, texel, alpha );","}"].join("\n")}},function(a,t){"use strict";t.a=class{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}},function(a,t,o){"use strict";var n=o(0);class d extends n.DataTextureLoader{constructor(u=void 0){super(u),this._parser=(f)=>{let b=-1,T=1,E=3,S=4,C=function(_,G=""){switch(_){case T:console.error("THREE.RGBELoader Read Error: "+(G||""));break;case 2:console.error("THREE.RGBELoader Write Error: "+(G||""));break;case E:console.error("THREE.RGBELoader Bad File Format: "+(G||""));break;default:case S:console.error("THREE.RGBELoader: Error: "+(G||""));}return b},D=2,U=4,O=function(_,G=1024,q=void 0){G=G?G:1024;let Z=_.pos,Y=-1,X=0,K="",Q=128,J=_StringfromCharCode.apply(null,new Uint16Array(_.subarray(Z,Z+Q)));for(;0>(Y=J.indexOf("\n"))&&X<G&&Z<_.byteLength;)K+=J,X+=J.length,Z+=Q,J+=_StringfromCharCode.apply(null,new Uint16Array(_.subarray(Z,Z+Q)));return!!(-1<Y)&&(!1!==q&&(_.pos+=X+Y+1),K+J.slice(0,Y))},I=function(_,G,q){let Z,Y,X,K,Q,J,$,ee,ae,re,te,oe,se,ne=G,ie=q;if(8>ne||32767<ne||2!==_[0]||2!==_[1]||128&_[2])return new Uint8Array(_);if(ne!==(_[2]<<8|_[3]))return C(E,"wrong scanline width");if(Z=new Uint8Array(4*G*q),!Z||!Z.length)return C(S,"unable to allocate buffer space");for(Y=0,X=0,ee=4*ne,se=new Uint8Array(4),J=new Uint8Array(ee);0<ie&&X<_.byteLength;){if(X+4>_.byteLength)return C(T);if(se[0]=_[X++],se[1]=_[X++],se[2]=_[X++],se[3]=_[X++],2!=se[0]||2!=se[1]||(se[2]<<8|se[3])!=ne)return C(E,"bad rgbe scanline format");for($=0;$<ee&&X<_.byteLength;){if(K=_[X++],oe=128<K,oe&&(K-=128),0===K||$+K>ee)return C(E,"bad scanline data");if(oe)for(Q=_[X++],ae=0;ae<K;ae++)J[$++]=Q;else J.set(_.subarray(X,X+K),$),$+=K,X+=K}for(re=ne,ae=0;ae<re;ae++)te=0,Z[Y]=J[ae+te],te+=ne,Z[Y+1]=J[ae+te],te+=ne,Z[Y+2]=J[ae+te],te+=ne,Z[Y+3]=J[ae+te],Y+=4;ie--}return Z},W=new Uint8Array(f),N=W.byteLength;W.pos=0;let H=function(_){let G,q,Z=/^#\?(\S+)$/,Y=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,X=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,K=/^\s*FORMAT=(\S+)\s*$/,Q=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,J={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};if(_.pos>=_.byteLength||!(G=O(_)))return C(T,"no header found");if(!(q=G.match(Z)))return C(E,"bad initial token");for(J.valid|=1,J.programtype=q[1],J.string+=G+"\n";G=O(_),!1!==G;){if(J.string+=G+"\n","#"===G.charAt(0)){J.comments+=G+"\n";continue}if((q=G.match(Y))&&(J.gamma=parseFloat(q[1])),(q=G.match(X))&&(J.exposure=parseFloat(q[1])),(q=G.match(K))&&(J.valid|=D,J.format=q[1]),(q=G.match(Q))&&(J.valid|=U,J.height=parseInt(q[1],10),J.width=parseInt(q[2],10)),J.valid&D&&J.valid&U)break}return J.valid&D?J.valid&U?J:C(E,"missing image size specifier"):C(E,"missing format specifier")}(W);if(b!==H){let _=H.width,G=H.height,q=I(W.subarray(W.pos),_,G);if(b!==q)return{width:_,height:G,data:q,header:H.string,gamma:H.gamma,exposure:H.exposure,format:n.RGBEFormat,type:n.UnsignedByteType}}return null}}}t.a=d},function(a,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var d=o(3),u=o.n(d),f=o(4),g=o.n(f),b=o(0),T=o(1),M=o.n(T),E=o(8),S=o(10),C=o(9),P=o(11),R=o(2),L=o.n(R);let F=o(7)(b),D=[{name:"Alpha",srcAvatar:"./dist/img/alpha.png",image:null,selected:!0},{name:"Beta",srcAvatar:"./dist/img/beta.png",image:null,selected:!0},{name:"Gamma",srcAvatar:"./dist/img/gamma.png",image:null,selected:!0},{name:"Delta",srcAvatar:"./dist/img/delta.gif",image:null,selected:!0},{name:"Zeta",srcAvatar:"./dist/img/zeta.png",image:null,selected:!0}],U={physicWorld:{step:1/600,subStep:10,gravity:9.82,solverIteration:10,contactEquationRelaxation:1,frictionEquationRelaxation:1},container:{radius:20,height:10,nbBars:30,barSize:{x:.5,y:1,z:4},markBarHeight:.95,currentRotation:0},ball:{radius:3,mass:5,sleepTimeLimit:.5,sleepSpeedLimit:.3,linearDamping:.01}};class V{constructor(){this.spinWheel=()=>{let O=this.cfg.container;this.wheelTween?this.wheelTween.restart():this.wheelTween=d.TweenLite.to(O,10,{currentRotation:"+="+.5*(100*_MathPI*Math.random())+.5,ease:Expo.easeOut,onUpdate:this.tweenWheel}),this.moveBall(3,3,0,new CANNON.Vec3(999,999,0))},this.tweenWheel=()=>{let O=this.cfg.container,A=new Date().getTime(),I=2*_MathPI/O.nbBars,W=0;this.wheel.quaternion.setFromAxisAngle(new b.Vector3(0,0,1),-O.currentRotation),this.bars.forEach((N,H)=>{let _=N.wall,G=N.cylinder,q=H*I,Z=H%2?1.02*O.radius:O.radius,Y=O.radius*_Mathcos(q+-O.currentRotation),X=O.radius*_Mathsin(q+-O.currentRotation),K=new Date().getTime(),Q=A-K,J=O.currentRotation-W,$=O.radius*J/Q,ee=Y*_Mathcos(_MathPI/2)-X*_Mathsin(_MathPI/2),ae=Y*_Mathsin(_MathPI/2)+X*_Mathcos(_MathPI/2),re=new CANNON.Vec3(ee,ae,0);re.normalize(),re.scale($);let te=Z*_Mathcos(q+-O.currentRotation),oe=Z*_Mathsin(q+-O.currentRotation);G.velocity=re,G.quaternion.setFromAxisAngle(new CANNON.Vec3(0,0,1),H*I+-O.currentRotation),G.position.set(te,oe,0),_.position.set(Y,X,0),_.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0),-_MathPI/2);let ne=new CANNON.Quaternion;ne.setFromAxisAngle(new CANNON.Vec3(0,1,0),3*_MathPI/2-(q+-O.currentRotation)),_.quaternion.copy(_.quaternion.mult(ne)),A=K,W=O.currentRotation})},this.mouseMove=(O)=>{O.preventDefault()},this.updatePhysicalWorld=()=>{let O=this.cfg.physicWorld,A=new Date().getTime(),I=(A-this.lastTick)/1e3;this.cannonWorld.step(O.step,I,O.subStep),this.lastTick=A,this.syncMeshWithBody(this.ball,this.sphereBody),this.cannonDebugRenderer&&this.cannonDebugRenderer.update()},this.render=(O=null)=>{if(this.stats.begin(),this.composer&&this.scene&&this.camera){this.updatePhysicalWorld();for(let I,A=0;A<this.hdrMaterials.length;A++)I=this.hdrCubeRenderTarget?this.hdrCubeRenderTarget.texture:null,I!==this.hdrMaterials[A].envMap&&(this.hdrMaterials[A].envMap=I,this.hdrMaterials[A].needsUpdate=!0);this.computeCurrentWinner(),this.composer.render()}this.stats.end(),requestAnimationFrame(this.render)},this.free(),this.init()}free(){this.scene=null,this.renderer=null,this.camera=null,this.composer=null}refresh(){this.updateTexture()}init(){this.cfg=U,this.hdrMaterials=[],this.currentWinner=null,this.stats=new Stats,this.stats.showPanel(0),this.stats.domElement&&(this.stats.domElement.className="stats",document.body.appendChild(this.stats.domElement)),this.mouse=new b.Vector2(0,0),this.mouseUVCoord=new b.Vector2(0,0),this.onClickPosition=new b.Vector2(0,0),this.raycaster=new b.Raycaster,this.scene=new b.Scene,this.fbo=document.createElement("canvas"),this.fbo.width=512,this.fbo.height=512,this.camera=new b.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e4),this.renderer=new b.WebGLRenderer,this.renderer.setSize(window.innerWidth,window.innerHeight),this.controls=new F(this.camera,this.renderer.domElement),this.renderer.shadowMap.enabled=!0,this.renderer.domElement.addEventListener("mousemove",this.mouseMove,!1),document.body.appendChild(this.renderer.domElement),this.camera.position.set(0,5,-50),this.camera.lookAt(new b.Vector3(0,0,0)),this.setupMeshes(),this.setupPhysicalWorld(),this.loadAssets(),this.gui=new R.GUI,D.forEach((O)=>{this.gui.add(O,"selected").name(O.name).onChange(this.refresh.bind(this))}),this.gui.add(this.cfg.container,"currentRotation",-4*_MathPI,4*_MathPI).onChange(this.tweenWheel),this.gui.add({spinWheel:this.spinWheel},"spinWheel")}loadAssets(){this.loadingManager=new b.LoadingManager(()=>{this.updateTexture(),this.render()}),D.forEach((O)=>{O.image=new b.ImageLoader(this.loadingManager).load(O.srcAvatar)})}setupMeshes(){let O=this.cfg.ball,A=new b.CircleGeometry(this.cfg.container.radius,32,0,2*_MathPI),I=new b.CylinderGeometry(this.cfg.container.radius,this.cfg.container.radius,this.cfg.container.height,32,4,!0);this.texture=new b.CanvasTexture(this.fbo,b.UVMapping,b.RepeatWrapping,b.RepeatWrapping),this.texture.minFilter=b.LinearFilter,this.texture.magFilter=b.LinearFilter,this.texture.format=b.RGBFormat;let W=new b.MeshStandardMaterial({color:16777215,side:b.DoubleSide,metalness:.9});W.roughness=1;let N=new b.MeshBasicMaterial({color:16777215,map:this.texture,side:b.DoubleSide}),H=new b.Mesh(I,W);H.position.set(0,0,0),H.rotateX(_MathPI/2),this.wheel=new b.Object3D,this.wheel.add(H),this.scene.add(this.wheel),this.circle=new b.Mesh(A,N),this.circle.position.set(0,0,this.cfg.container.height/2),this.wheel.add(this.circle);let _=new b.SphereGeometry(O.radius,32,32),G=new b.MeshStandardMaterial({map:null,color:16777215,metalness:1});G.roughness=1,G.bumpScale=-0.05,this.hdrMaterials.push(G,W),this.ball=new b.Mesh(_,G),this.scene.add(this.ball);let q=new b.TextureLoader;q.load("/dist/img/BasketBallColor.jpg",($)=>{$.anisotropy=4;for(let ee=0;ee<this.hdrMaterials.length;ee++)this.hdrMaterials[ee].roughnessMap=$,this.hdrMaterials[ee].bumpMap=$,this.hdrMaterials[ee].needsUpdate=!0});let Y=function($,ee){return[$+"px"+ee,$+"nx"+ee,$+"py"+ee,$+"ny"+ee,$+"pz"+ee,$+"nz"+ee]}("./dist/textures/pisaHDR/",".hdr"),X=new E.a().load(b.UnsignedByteType,Y,($)=>{let ee=new S.a($);ee.update(this.renderer);let ae=new C.a(ee.cubeLods);ae.update(this.renderer),this.hdrCubeRenderTarget=ae.CubeUVRenderTarget});this.scene.add(new b.AmbientLight(2236962));let K=new b.SpotLight(16777215);K.position.set(50,100,50),K.angle=_MathPI/7,K.penumbra=0.8,K.castShadow=!0,this.scene.add(K),this.renderPass=new T.RenderPass(this.scene,this.camera);let Q=new T.ShaderPass(T.CopyShader);Q.renderToScreen=!0;let J=new P.a(new b.Vector2(window.innerWidth,window.innerHeight),1.5,.4,0.85);this.composer=new M.a(this.renderer),this.composer.addPass(this.renderPass),this.composer.addPass(J),this.composer.addPass(Q),this.renderer.gammaInput=!0,this.renderer.gammaOutput=!0}setupPhysicalWorld(){let O=this.cfg.container,A=this.cfg.ball;this.cannonWorld=new CANNON.World,this.cannonWorld.quatNormalizeSkip=0,this.cannonWorld.quatNormalizeFast=!1;let I=new CANNON.GSSolver;I.iterations=10,I.tolerance=0.2,this.cannonWorld.solver=I,this.cannonWorld.gravity.set(0,-25,0),this.cannonWorld.broadphase=new CANNON.NaiveBroadphase,this.cannonWorld.defaultContactMaterial.contactEquationStiffness=1e5,this.cannonWorld.defaultContactMaterial.contactEquationRegularizationTime=4;let W=new CANNON.Material("slipperyMaterial"),N=new CANNON.Material("boxMaterial"),H=new CANNON.ContactMaterial(W,N,{friction:0,restitution:0.9}),_=new CANNON.ContactMaterial(W,W,{friction:0.4,restitution:0.9});this.cannonWorld.addContactMaterial(H),this.cannonWorld.addContactMaterial(_);let G=new CANNON.Sphere(A.radius);this.sphereBody=new CANNON.Body({mass:A.mass,shape:G,material:N.id}),this.sphereBody.allowSleep=!0,this.sphereBody.addEventListener("sleepy",()=>{console.log("The sphere is feeling sleepy...")}),this.sphereBody.addEventListener("sleep",()=>{console.log("The sphere fell asleep!")}),this.moveBall(0,0,0),this.cannonWorld.addBody(this.sphereBody);let q=new CANNON.Plane,Z=new CANNON.Plane,Y=new CANNON.Body({mass:0,material:W.id}),X=new CANNON.Body({mass:0,material:W.id});Y.allowSleep=!0,Y.sleepTimeLimit=1,Y.sleepSpeedLimit=.5,Y.linearDamping=.01,X.allowSleep=!0,X.sleepTimeLimit=1,X.sleepSpeedLimit=.5,X.linearDamping=.01,X.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0),Math.PI),Y.position.set(0,0,-this.cfg.container.height/2),X.position.set(0,0,this.cfg.container.height/2),Y.addShape(q),X.addShape(Z),this.cannonWorld.addBody(Y),this.cannonWorld.addBody(X),this.bars=[];let K=2*_MathPI/this.cfg.container.nbBars;for(let Q=0;Q<this.cfg.container.nbBars;Q++){let J=Q%2?1.02*O.radius:O.radius,$=O.radius,ee=Q*K,ae=new CANNON.Box(new CANNON.Vec3(O.barSize.y,O.barSize.x,O.barSize.z)),re=new CANNON.Body({mass:0,material:W.id});re.allowSleep=!0,re.addShape(ae),re.quaternion.setFromAxisAngle(new CANNON.Vec3(0,0,1),ee),re.position.set(J*_Mathcos(ee),J*_Mathsin(ee),0);let te=new b.BoxGeometry(2*O.barSize.y,2*O.barSize.x,2*O.barSize.z),oe=new b.Mesh(te,this.hdrMaterials[0]);this.syncMeshWithBody(oe,re),this.wheel.add(oe);let ne=new CANNON.Plane,ie=new CANNON.Body({mass:0,material:W.id});ie.addShape(ne),ie.position.set($*_Mathcos(ee),$*_Mathsin(ee),0),ie.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0),-_MathPI/2);let se=new CANNON.Quaternion;se.setFromAxisAngle(new CANNON.Vec3(0,1,0),3*_MathPI/2-ee),ie.quaternion.copy(ie.quaternion.mult(se)),this.cannonWorld.addBody(re),this.cannonWorld.addBody(ie),this.bars.push({wall:ie,cylinder:re,mesh:oe})}}moveBall(O,A,I,W=new CANNON.Vec3(999,999,999)){this.sphereBody.position.set(O,A,I),this.sphereBody.velocity=W,this.syncMeshWithBody(this.ball,this.sphereBody),this.sphereBody.wakeUp()}syncMeshWithBody(O,A){O.position.copy(A.position),O.quaternion.copy(A.quaternion)}updateTexture(){console.log("updateTexture");let O=this.fbo.getContext("2d"),A=_Mathfloor(this.fbo.width),I=_Mathfloor(this.fbo.height),W=A/2,N=I/2,H=2,_=o.i(f.filter)(D,(Z)=>Z.selected),G=2*_MathPI/_.length,q=0;O.clearRect(0,0,A,I),O.lineWidth=H,O.strokeStyle="#003300",1<_.length&&_.forEach((Z)=>{let Y=q*G,X=(q+1)*G,K=this.currentWinner===Z?"red":"blue";O.save(),O.fillStyle=K,O.beginPath(),O.moveTo(W,N),O.arc(W,N,-H+W,Y,X),O.lineTo(W,N),O.closePath(),O.fill(),O.stroke(),O.restore(),O.save(),O.translate(W,N),O.rotate(Y+G/2+_MathPI/2),O.drawImage(Z.image,-35,-N+15,70,70),O.restore(),q++}),this.texture.needsUpdate=!0}computeCurrentWinner(){let O=o.i(f.filter)(D,(H)=>H.selected),A=2*_MathPI/O.length,I=0,W=new b.Raycaster(this.ball.position,new b.Vector3(0,0,1)),N=W.intersectObject(this.circle,!0);if(N.length){let H=N[0];if(H.uv){let _=H.uv;H.object.material.map.transformUv(_);let G=Math.atan2(.5-_.y,.5-_.x)-_MathPI;0>G&&(G+=2*_MathPI),O.forEach((q)=>{let Z=I*A,Y=(I+1)*A;Z<=G&&G<=Y&&this.setCurrentWinner(q),I++})}}}setCurrentWinner(O){O!==this.currentWinner&&(this.currentWinner=O,this.updateTexture())}getMousePosition(O,A,I){let W=O.getBoundingClientRect();return[(A-W.left)/W.width,(I-W.top)/W.height]}getIntersects(O,A){return this.mouse.set(2*O.x-1,-(2*O.y)+1),this.raycaster.setFromCamera(this.mouse,this.camera),this.raycaster.intersectObjects(A)}}document.addEventListener("DOMContentLoaded",()=>new V)}],[22]);